commit a80101c01d3ab61be04934825815b70f0fb2f0fb
Author: Son Luong Ngoc <sluongng@gmail.com>
Date:   Mon Jun 13 09:07:26 2022 +0200

    Revert "Use `patch` from `@bazel_tools//tools/build_defs/repo:utils.bzl` (#1269)"
    
    This reverts commit 1dc3aaa5a964138b996c6912ec3d7069a6eccd14.

diff --git a/internal/go_repository.bzl b/internal/go_repository.bzl
index cc089e2..3a85e00 100644
--- a/internal/go_repository.bzl
+++ b/internal/go_repository.bzl
@@ -14,7 +14,7 @@
 
 load("//internal:common.bzl", "env_execute", "executable_extension")
 load("@bazel_gazelle//internal:go_repository_cache.bzl", "read_cache_env")
-load("@bazel_tools//tools/build_defs/repo:utils.bzl", "patch", "read_netrc", "use_netrc")
+load("@bazel_tools//tools/build_defs/repo:utils.bzl", "read_netrc", "use_netrc")
 
 _DOC = """
 `go_repository` downloads a Go project and generates build files with Gazelle
@@ -518,9 +518,8 @@ go_repository = repository_rule(
             doc = "A list of patches to apply to the repository after gazelle runs.",
         ),
         "patch_tool": attr.string(
-            default = "",
-            doc = """The patch tool used to apply `patches`. If this is specified, Bazel will
-            use the specifed patch tool instead of the Bazel-native patch implementation.""",
+            default = "patch",
+            doc = "The patch tool used to apply `patches`.",
         ),
         "patch_args": attr.string_list(
             default = ["-p0"],
@@ -542,3 +541,26 @@ go_repository = repository_rule(
     },
 )
 """See repository.md#go-repository for full documentation."""
+
+# Copied from @bazel_tools//tools/build_defs/repo:utils.bzl
+def patch(ctx):
+    """Implementation of patching an already extracted repository"""
+    bash_exe = ctx.os.environ["BAZEL_SH"] if "BAZEL_SH" in ctx.os.environ else "bash"
+    for patchfile in ctx.attr.patches:
+        command = "{patchtool} {patch_args} < {patchfile}".format(
+            patchtool = ctx.attr.patch_tool,
+            patchfile = ctx.path(patchfile),
+            patch_args = " ".join([
+                "'%s'" % arg
+                for arg in ctx.attr.patch_args
+            ]),
+        )
+        st = ctx.execute([bash_exe, "-c", command])
+        if st.return_code:
+            fail("Error applying patch %s:\n%s%s" %
+                 (str(patchfile), st.stderr, st.stdout))
+    for cmd in ctx.attr.patch_cmds:
+        st = ctx.execute([bash_exe, "-c", cmd])
+        if st.return_code:
+            fail("Error applying patch command %s:\n%s%s" %
+                 (cmd, st.stdout, st.stderr))
diff --git a/repository.md b/repository.md
index 1eb1546..1aacc32 100644
--- a/repository.md
+++ b/repository.md
@@ -185,7 +185,7 @@ go_repository(
 | <a id="go_repository-importpath"></a>importpath |  The Go import path that matches the root directory of this repository.<br><br>            In module mode (when <code>version</code> is set), this must be the module path. If             neither <code>urls</code> nor <code>remote</code> is specified, <code>go_repository</code> will             automatically find the true path of the module, applying import path             redirection.<br><br>            If build files are generated for this repository, libraries will have their             <code>importpath</code> attributes prefixed with this <code>importpath</code> string.   | String | required |  |
 | <a id="go_repository-patch_args"></a>patch_args |  Arguments passed to the patch tool when applying patches.   | List of strings | optional | ["-p0"] |
 | <a id="go_repository-patch_cmds"></a>patch_cmds |  Commands to run in the repository after patches are applied.   | List of strings | optional | [] |
-| <a id="go_repository-patch_tool"></a>patch_tool |  The patch tool used to apply <code>patches</code>. If this is specified, Bazel will             use the specifed patch tool instead of the Bazel-native patch implementation.   | String | optional | "" |
+| <a id="go_repository-patch_tool"></a>patch_tool |  The patch tool used to apply <code>patches</code>.   | String | optional | "patch" |
 | <a id="go_repository-patches"></a>patches |  A list of patches to apply to the repository after gazelle runs.   | <a href="https://bazel.build/docs/build-ref.html#labels">List of labels</a> | optional | [] |
 | <a id="go_repository-remote"></a>remote |  The VCS location where the repository should be downloaded from. This is             usually inferred from <code>importpath</code>, but you can set <code>remote</code> to download             from a private repository or a fork.   | String | optional | "" |
 | <a id="go_repository-replace"></a>replace |  A replacement for the module named by <code>importpath</code>. The module named by             <code>replace</code> will be downloaded at <code>version</code> and verified with <code>sum</code>.<br><br>            NOTE: There is no <code>go_repository</code> equivalent to file path <code>replace</code>             directives. Use <code>local_repository</code> instead.   | String | optional | "" |
